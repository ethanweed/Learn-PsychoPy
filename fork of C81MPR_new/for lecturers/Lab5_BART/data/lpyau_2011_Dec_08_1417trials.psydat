(ipsychopy.data
TrialHandler
p1
(dp2
S'origin'
p3
V<PsychoPy2experiment version="1.71.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1280, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'group (A/B)':'', 'digit ratio':'','gender (m/f)':'','age':'','session':'005'}" valType="code" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="logging level" val="data" valType="code" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Saved data folder" val="" valType="code" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="updateEarnings">\u000a        <Param name="Begin Experiment" val="bankedEarnings=0.0&#10;lastBalloonEarnings=0.0&#10;thisBalloonEarnings=0.0" valType="code" updates="constant"/>\u000a        <Param name="name" val="updateEarnings" valType="code" updates="None"/>\u000a        <Param name="Each Frame" val="thisBalloonEarnings=nPumps*0.05" valType="code" updates="constant"/>\u000a        <Param name="Begin Routine" val="" valType="code" updates="constant"/>\u000a        <Param name="End Routine" val="#calculate cash 'earned'&#10;if popped:&#10;  thisBalloonEarnings=0.0&#10;  lastBalloonEarnings=0.0&#10;else:   lastBalloonEarnings=thisBalloonEarnings&#10;bankedEarnings = bankedEarnings+lastBalloonEarnings" valType="code" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="code" updates="constant"/>\u000a      </CodeComponent>\u000a      <CodeComponent name="setBalloonSize">\u000a        <Param name="Begin Experiment" val="balloonSize=0.08&#10;balloonMsgHeight=0.01" valType="code" updates="constant"/>\u000a        <Param name="name" val="setBalloonSize" valType="code" updates="None"/>\u000a        <Param name="Each Frame" val="balloonSize=0.1+nPumps*0.015" valType="code" updates="constant"/>\u000a        <Param name="Begin Routine" val="balloonSize=0.08&#10;popped=False&#10;nPumps=0" valType="code" updates="constant"/>\u000a        <Param name="End Routine" val="#save data&#10;trials.addData('nPumps', nPumps)&#10;trials.addData('size', balloonSize)&#10;trials.addData('earnings', thisBalloonEarnings)&#10;trials.addData('popped', popped)&#10;&#10;" valType="code" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="code" updates="constant"/>\u000a      </CodeComponent>\u000a      <PatchComponent name="balloonBody">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="balloonBody" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[-1+balloonSize/2, 0]" valType="code" updates="set every frame"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="sf" val="1" valType="code" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="norm" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="512" valType="code" updates="constant"/>\u000a        <Param name="phase" val="0.0" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="image" val="redBalloon.png" valType="str" updates="constant"/>\u000a        <Param name="advancedParams"/>\u000a        <Param name="size" val="$balloonSize" valType="code" updates="set every frame"/>\u000a      </PatchComponent>\u000a      <TextComponent name="reminderMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="reminderMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Press SPACE to pump the balloon&#10;Press RETURN to bank this sum" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -0.8]" valType="code" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="balloonValMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="balloonValMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$u&quot;This balloon value:\u005cn£%.2f&quot; %thisBalloonEarnings" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0,0.05]" valType="code" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="bankedMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="bankedMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$u&quot;You have banked:\u005cn£%.2f&quot; %bankedEarnings" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.8]" valType="code" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="checkKeys">\u000a        <Param name="Begin Experiment" val="" valType="code" updates="constant"/>\u000a        <Param name="name" val="checkKeys" valType="code" updates="None"/>\u000a        <Param name="Each Frame" val="if event.getKeys(['space']):&#10;  nPumps=nPumps+1&#10;  if nPumps&gt;maxPumps:&#10;    popped=True&#10;    #continueRoutine=False" valType="code" updates="constant"/>\u000a        <Param name="Begin Routine" val="" valType="code" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="code" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="code" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="bankButton">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="bankButton" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="&quot;return&quot;" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="finalScore">\u000a      <TextComponent name="finalScore_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="finalScore_2" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$u&quot;Well done! You banked a total of\u005cn£%2.f&quot; %bankedEarnings" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="doneKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="doneKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="checkPopped">\u000a        <Param name="Begin Experiment" val="feedbackText=&quot;&quot;&#10;from psychopy import sound&#10;bang = sound.Sound(&quot;bang.wav&quot;)&#10;" valType="code" updates="constant"/>\u000a        <Param name="name" val="checkPopped" valType="code" updates="None"/>\u000a        <Param name="Each Frame" val="" valType="code" updates="constant"/>\u000a        <Param name="Begin Routine" val="if popped==True:&#10;  feedbackText=&quot;Oops! Lost that one!&quot;&#10;  bang.play()&#10;else:&#10;  feedbackText=u&quot;You banked £%.2f&quot; %lastBalloonEarnings&#10;" valType="code" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="code" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="code" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedbackMsg">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedbackMsg" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$feedbackText" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <TextComponent name="instrMessage">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instrMessage" valType="code" updates="constant"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="This is a game where you have to optimise your earnings in a balloon pumping competition.&#10;&#10;You get prize money for each balloon you pump up, according to its size. But if you pump it too far then, when you tie the knot, it will pop and you'll get nothing for that balloon.&#10;&#10;Balloons differ in their maximum size - they can occasionally reach the entire size of the screen but most are much weaker than that.&#10;&#10;Press;&#10;    SPACE to pump the balloon&#10;    RETURN to tie the balloon and bank your reward&#10;" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'imageFile': u'blueBalloon.png', u'maxPumps': 2}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 8}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 14}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 20}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 26}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 32}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 38}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 44}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 50}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 56}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 62}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 68}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 74}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 80}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 86}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 92}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 98}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 104}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 110}, {u'imageFile': u'blueBalloon.png', u'maxPumps': 116}]" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="finalScore"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4
sS'thisTrial'
p5
(lp6
sS'originPath'
p7
S'C:\\Users\\lpyau\\Desktop\\Lab5_BART\\BART\\bart2.psyexp'
p8
sS'thisRepN'
p9
I1
sS'nTotal'
p10
I20
sS'extraInfo'
p11
(dp12
S'expName'
p13
S'None'
p14
sS'gender (m/f)'
p15
Vf
sS'group (A/B)'
p16
VA
sS'age'
p17
V18
p18
sS'session'
p19
V005
p20
sS'digit ratio'
p21
V0.985915
p22
sS'date'
p23
S'2011_Dec_08_1417'
p24
sS'participant'
p25
Vlpyau
p26
ssS'data'
p27
ccopy_reg
_reconstructor
p28
(cpsychopy.data
DataHandler
p29
c__builtin__
dict
p30
(dp31
S'ran'
p32
cnumpy.ma.core
_mareconstruct
p33
(cnumpy.ma.core
MaskedArray
p34
cnumpy
ndarray
p35
(I0
tp36
S'b'
tRp37
(I1
(I20
I1
tcnumpy
dtype
p38
(S'f4'
I0
I1
tRp39
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'nPumps'
p40
g33
(g34
g35
g36
S'b'
tRp41
(I1
(I20
I1
tg39
I00
S'\x00\x00\xc8A\x00\x00\xd8A\x00\x00\x10B\x00\x00\x18B\x00\x00\x10B\x00\x00\x14B\x00\x00\x10B\x00\x00\x10B\x00\x00\x10B\x00\x00\x10B\x00\x00\x10B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x00B\x00\x00\xe0A\x00\x00\x0cB\x00\x00\x10B\x00\x00\x0cB\x00\x00\x10B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'popped'
p42
cnumpy.core.multiarray
_reconstruct
p43
(g35
(I0
tS'b'
tRp44
(I1
(I20
I1
tg38
(S'O4'
I0
I1
tRp45
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp46
I00
aI00
aI00
aI01
aI00
aI01
aI00
aI00
aI00
aI00
aI01
aI00
aI00
aI01
aI00
aI00
aI00
aI00
aI00
aI00
atbsS'earnings'
p47
g33
(g34
g35
g36
S'b'
tRp48
(I1
(I20
I1
tg39
I00
S'\x00\x00\xa0?\xcd\xcc\xac?ff\xe6?\x00\x00\x00\x00ff\xe6?\x00\x00\x00\x00ff\xe6?ff\xe6?ff\xe6?ff\xe6?\x00\x00\x00\x00\x9a\x99\xd9?\x00\x00\xe0?\x00\x00\x00\x00\xcd\xcc\xcc?33\xb3?\x00\x00\xe0?ff\xe6?\x00\x00\xe0?ff\xe6?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'size'
p49
g33
(g34
g35
g36
S'b'
tRp50
(I1
(I20
I1
tg39
I00
S"33\xf3>\xaeG\x01?\n\xd7#?\x1f\x85+?\n\xd7#?\x14\xae'?\n\xd7#?\n\xd7#?\n\xd7#?\n\xd7#?\n\xd7#?\xf6(\x1c?\x00\x00 ?\n\xd7#?\xe1z\x14?\xb8\x1e\x05?\x00\x00 ?\n\xd7#?\x00\x00 ?\n\xd7#?"
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp51
(dp52
S'isNumeric'
p53
(dp54
g32
I01
sg40
I01
sg42
I00
sg47
I01
sg49
I01
ssS'trials'
p55
g1
sS'dataTypes'
p56
(lp57
g32
ag40
ag49
ag47
ag42
asS'dataShape'
p58
(lp59
I20
aI1
asbsS'thisN'
p60
I20
sS'sequenceIndices'
p61
g43
(g35
(I0
tS'b'
tRp62
(I1
(I20
I1
tg38
(S'i4'
I0
I1
tRp63
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x05\x00\x00\x00\x06\x00\x00\x00\x07\x00\x00\x00\x08\x00\x00\x00\t\x00\x00\x00\n\x00\x00\x00\x0b\x00\x00\x00\x0c\x00\x00\x00\r\x00\x00\x00\x0e\x00\x00\x00\x0f\x00\x00\x00\x10\x00\x00\x00\x11\x00\x00\x00\x12\x00\x00\x00\x13\x00\x00\x00'
tbsS'finished'
p64
I01
sS'nReps'
p65
I1
sS'nRemaining'
p66
I-1
sS'trialList'
p67
(lp68
g28
(cpsychopy.data
TrialType
p69
g30
(dp70
VimageFile
p71
VblueBalloon.png
p72
sVmaxPumps
p73
I26
stRp74
ag28
(g69
g30
(dp75
g71
g72
sg73
I80
stRp76
ag28
(g69
g30
(dp77
g71
g72
sg73
I56
stRp78
ag28
(g69
g30
(dp79
g71
g72
sg73
I2
stRp80
ag28
(g69
g30
(dp81
g71
g72
sg73
I62
stRp82
ag28
(g69
g30
(dp83
g71
g72
sg73
I20
stRp84
ag28
(g69
g30
(dp85
g71
g72
sg73
I44
stRp86
ag28
(g69
g30
(dp87
g71
g72
sg73
I116
stRp88
ag28
(g69
g30
(dp89
g71
g72
sg73
I104
stRp90
ag28
(g69
g30
(dp91
g71
g72
sg73
I74
stRp92
ag28
(g69
g30
(dp93
g71
g72
sg73
I8
stRp94
ag28
(g69
g30
(dp95
g71
g72
sg73
I110
stRp96
ag28
(g69
g30
(dp97
g71
g72
sg73
I38
stRp98
ag28
(g69
g30
(dp99
g71
g72
sg73
I14
stRp100
ag28
(g69
g30
(dp101
g71
g72
sg73
I68
stRp102
ag28
(g69
g30
(dp103
g71
g72
sg73
I32
stRp104
ag28
(g69
g30
(dp105
g71
g72
sg73
I50
stRp106
ag28
(g69
g30
(dp107
g71
g72
sg73
I86
stRp108
ag28
(g69
g30
(dp109
g71
g72
sg73
I92
stRp110
ag28
(g69
g30
(dp111
g71
g72
sg73
I98
stRp112
asS'seed'
p113
NsS'thisIndex'
p114
cnumpy.core.multiarray
scalar
p115
(g63
S'\x13\x00\x00\x00'
tRp116
sS'thisTrialN'
p117
I0
sS'method'
p118
S'sequential'
p119
sS'_warnUseOfNext'
p120
I01
sb.