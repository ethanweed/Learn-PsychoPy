(ipsychopy.data
TrialHandler
p1
(dp2
S'origin'
p3
V<PsychoPy2experiment version="1.61.03" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[2560, 1440]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Experiment info" val="{'participant':'', 'gender (m/f)':'', 'age':'', 'session':03}" valType="code" updates="None"/>\u000a    <Param name="Save excel file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <TextComponent name="fixate">\u000a        <Param name="name" val="fixate" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1, 1, 1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="+" valType="str" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="duration" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="letterHeight" val="2" valType="code" updates="constant"/>\u000a        <Param name="startTime" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="units" val="cm" valType="str" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a      </TextComponent>\u000a      <PatchComponent name="stimulus">\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="name" val="stimulus" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="image" val="$stimFile" valType="str" updates="set every repeat"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="mask" val="none" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="duration" val="0.2" valType="code" updates="constant"/>\u000a        <Param name="phase" val="0.0" valType="code" updates="constant"/>\u000a        <Param name="startTime" val="2.0" valType="code" updates="constant"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="sf" val="None" valType="code" updates="constant"/>\u000a        <Param name="advancedParams"/>\u000a        <Param name="size" val="[200,200]" valType="code" updates="constant"/>\u000a      </PatchComponent>\u000a      <PatchComponent name="mask">\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="name" val="mask" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="image" val="mask.png" valType="str" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="mask" val="none" valType="str" updates="constant"/>\u000a        <Param name="pos" val="$[xPos, yPos]" valType="code" updates="set every repeat"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="duration" val="5.0" valType="code" updates="constant"/>\u000a        <Param name="phase" val="0.0" valType="code" updates="constant"/>\u000a        <Param name="startTime" val="2.2" valType="code" updates="constant"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="units" val="pix" valType="str" updates="None"/>\u000a        <Param name="sf" val="None" valType="code" updates="constant"/>\u000a        <Param name="advancedParams"/>\u000a        <Param name="size" val="[200,200]" valType="code" updates="constant"/>\u000a      </PatchComponent>\u000a      <KeyboardComponent name="resp">\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="resp" valType="code" updates="None"/>\u000a        <Param name="forceEndTrial" val="True" valType="bool" updates="constant"/>\u000a        <Param name="correctAns" val="$corrAns" valType="str" updates="constant"/>\u000a        <Param name="storeResponseTime" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startTime" val="2.0" valType="code" updates="constant"/>\u000a        <Param name="allowedKeys" val="['s','h']" valType="str" updates="constant"/>\u000a        <Param name="duration" val="7.0" valType="code" updates="constant"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="instrMain">\u000a      <TextComponent name="instr2">\u000a        <Param name="name" val="instr2" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="OK, ready to start the main experiment?&#10;&#10;Remember, press;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;When you are ready to proceed press any key." valType="str" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="duration" val="" valType="code" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a        <Param name="startTime" val="0.0" valType="code" updates="constant"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="units" val="window units" valType="str" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok2">\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok2" valType="code" updates="None"/>\u000a        <Param name="forceEndTrial" val="True" valType="bool" updates="constant"/>\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeResponseTime" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startTime" val="0.0" valType="code" updates="constant"/>\u000a        <Param name="allowedKeys" val="" valType="str" updates="constant"/>\u000a        <Param name="duration" val="" valType="code" updates="constant"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="message">\u000a        <Param name="Begin Experiment" val="#msg variable just needs some value at start&#10;msg=''" valType="code" updates="constant"/>\u000a        <Param name="name" val="message" valType="code" updates="None"/>\u000a        <Param name="Each Frame" val="" valType="code" updates="constant"/>\u000a        <Param name="Begin Routine" val="if resp.corr:#stored on last run routine&#10;  msg=&quot;Correct! RT=%.3f&quot; %(resp.rt)&#10;else:&#10;  msg=&quot;Oops! That was wrong&quot;" valType="code" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="code" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="code" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="name" val="feedback" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every repeat"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="duration" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a        <Param name="startTime" val="0.0" valType="code" updates="constant"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="units" val="window units" valType="str" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="thanks">\u000a      <TextComponent name="thanksMsg">\u000a        <Param name="name" val="thanksMsg" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="You're done! Fun, wasn't it!? ;-)" valType="str" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="duration" val="2.0" valType="code" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a        <Param name="startTime" val="0.0" valType="code" updates="constant"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="units" val="window units" valType="str" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instrPractice">\u000a      <TextComponent name="instruct1">\u000a        <Param name="name" val="instruct1" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="In this experiment you will be presented with a large letter made up of smaller letters. Your task is to&#10;&#10;Respond by pressing;&#10; - 'S' if the SMALL letters are S&#10; - 'H' if the SMALL letters are H&#10;&#10;Try to respond as quickly and as accurately as possible.&#10;&#10;There will be a number of practice trials in which you will be given feedback. &#10;&#10;Press any key when you are ready to proceed." valType="str" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="duration" val="" valType="code" updates="constant"/>\u000a        <Param name="letterHeight" val="0.075" valType="code" updates="constant"/>\u000a        <Param name="startTime" val="0.0" valType="code" updates="constant"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="units" val="window units" valType="str" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="ok1">\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="ok1" valType="code" updates="None"/>\u000a        <Param name="forceEndTrial" val="True" valType="bool" updates="constant"/>\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeResponseTime" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startTime" val="0.0" valType="code" updates="constant"/>\u000a        <Param name="allowedKeys" val="" valType="str" updates="constant"/>\u000a        <Param name="duration" val="" valType="code" updates="constant"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="instrPractice"/>\u000a    <LoopInitiator loopType="TrialHandler" name="practiceTrials">\u000a      <Param name="endPoints" val="[1, 2]" valType="num" updates="None"/>\u000a      <Param name="name" val="practiceTrials" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="num" updates="None"/>\u000a      <Param name="trialList" val="[{'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'location': 'up_right', 'stimFile': 'bigHsmallH.png', 'corrAns': 'h'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'location': 'up_right', 'stimFile': 'bigHsmallS.png', 'corrAns': 's'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'location': 'up_right', 'stimFile': 'bigSsmallS.png', 'corrAns': 's'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'location': 'up_right', 'stimFile': 'bigSsmallH.png', 'corrAns': 'h'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'location': 'up_left', 'stimFile': 'bigHsmallH.png', 'corrAns': 'h'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'location': 'up_left', 'stimFile': 'bigHsmallS.png', 'corrAns': 's'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'location': 'up_left', 'stimFile': 'bigSsmallS.png', 'corrAns': 's'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'location': 'up_left', 'stimFile': 'bigSsmallH.png', 'corrAns': 'h'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'location': 'down_right', 'stimFile': 'bigHsmallH.png', 'corrAns': 'h'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'location': 'down_right', 'stimFile': 'bigHsmallS.png', 'corrAns': 's'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'location': 'down_right', 'stimFile': 'bigSsmallS.png', 'corrAns': 's'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'location': 'down_right', 'stimFile': 'bigSsmallH.png', 'corrAns': 'h'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'location': 'down_left', 'stimFile': 'bigHsmallH.png', 'corrAns': 'h'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'location': 'down_left', 'stimFile': 'bigHsmallS.png', 'corrAns': 's'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'location': 'down_left', 'stimFile': 'bigSsmallS.png', 'corrAns': 's'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'location': 'down_left', 'stimFile': 'bigSsmallH.png', 'corrAns': 'h'}]" valType="str" updates="None"/>\u000a      <Param name="trialListFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="practiceTrials"/>\u000a    <Routine name="instrMain"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="4" valType="num" updates="None"/>\u000a      <Param name="trialList" val="[{'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'location': 'up_right', 'stimFile': 'bigHsmallH.png', 'corrAns': 'h'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'location': 'up_right', 'stimFile': 'bigHsmallS.png', 'corrAns': 's'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'location': 'up_right', 'stimFile': 'bigSsmallS.png', 'corrAns': 's'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': 200.0, 'location': 'up_right', 'stimFile': 'bigSsmallH.png', 'corrAns': 'h'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'location': 'up_left', 'stimFile': 'bigHsmallH.png', 'corrAns': 'h'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'location': 'up_left', 'stimFile': 'bigHsmallS.png', 'corrAns': 's'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': 200.0, 'location': 'up_left', 'stimFile': 'bigSsmallS.png', 'corrAns': 's'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': 200.0, 'location': 'up_left', 'stimFile': 'bigSsmallH.png', 'corrAns': 'h'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'location': 'down_right', 'stimFile': 'bigHsmallH.png', 'corrAns': 'h'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'location': 'down_right', 'stimFile': 'bigHsmallS.png', 'corrAns': 's'}, {'xPos': 200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'location': 'down_right', 'stimFile': 'bigSsmallS.png', 'corrAns': 's'}, {'xPos': 200.0, 'congruence': 'consistent', 'yPos': -200.0, 'location': 'down_right', 'stimFile': 'bigSsmallH.png', 'corrAns': 'h'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'location': 'down_left', 'stimFile': 'bigHsmallH.png', 'corrAns': 'h'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'location': 'down_left', 'stimFile': 'bigHsmallS.png', 'corrAns': 's'}, {'xPos': -200.0, 'congruence': 'conflicting', 'yPos': -200.0, 'location': 'down_left', 'stimFile': 'bigSsmallS.png', 'corrAns': 's'}, {'xPos': -200.0, 'congruence': 'consistent', 'yPos': -200.0, 'location': 'down_left', 'stimFile': 'bigSsmallH.png', 'corrAns': 'h'}]" valType="str" updates="None"/>\u000a      <Param name="trialListFile" val="trialTypes.xlsx" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="thanks"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p4
sS'thisTrial'
p5
(lp6
sS'originPath'
p7
S'Z:\\Lab3_Navon\\Navon\\NavonTask.psyexp'
p8
sS'thisRepN'
p9
I4
sS'nTotal'
p10
I64
sS'extraInfo'
p11
(dp12
S'expName'
p13
S'None'
p14
sS'gender (m/f)'
p15
Vf
sS'age'
p16
V19
p17
sS'session'
p18
I3
sS'date'
p19
S'2011_Nov_03_1145'
p20
sS'participant'
p21
Vlpycc1
p22
ssS'data'
p23
ccopy_reg
_reconstructor
p24
(cpsychopy.data
DataHandler
p25
c__builtin__
dict
p26
(dp27
S'ran'
p28
cnumpy.ma.core
_mareconstruct
p29
(cnumpy.ma.core
MaskedArray
p30
cnumpy
ndarray
p31
(I0
tp32
S'b'
tRp33
(I1
(I16
I4
tcnumpy
dtype
p34
(S'f4'
I0
I1
tRp35
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'resp.keys'
p36
cnumpy.core.multiarray
_reconstruct
p37
(g31
(I0
tS'b'
tRp38
(I1
(I16
I4
tg34
(S'O4'
I0
I1
tRp39
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp40
S'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS's'
aS's'
aS's'
aS's'
aS's'
aS's'
aS's'
aS'h'
aS's'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS's'
aS's'
aS's'
aS'h'
aS'h'
aS's'
aS's'
aS's'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS's'
aS's'
aS'h'
aS's'
aS's'
aS's'
aS's'
aS's'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS'h'
aS's'
aS's'
aS's'
aS's'
aS's'
aS's'
aS's'
aS's'
aS's'
aS'h'
aS'h'
aS'h'
atbsS'resp.corr'
p41
g29
(g30
g31
g32
S'b'
tRp42
(I1
(I16
I4
tg35
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'resp.rt'
p43
g29
(g30
g31
g32
S'b'
tRp44
(I1
(I16
I4
tg35
I00
S'\x9d+I?\xad\x13+?\x89\x953?\xeb{"?D\xa1%@\xa5\x1b\x8d?\x87\xb1D?5o@?6K|?\xac1k?\xf3\xa33?n@\x1e?V\xe0U?\xa4\xbc\x07@\xb5\xca&?\xcbk@?m\x06\x0c@\x89\xe57?\r\x87Q?\xe3R/?\xc4\xfb\xca?\xe5>\x8f?\x81\xf4H?\x13\x02k?\x01J\xf6?\xdd\x85Q?K\xc0U?FV/?\'\x9a@?pk@?\xf3\x0c+?\xa5~\x93?-\xa8\x95?\xd0>M?\xa0\xf4\x19?\xdc\x87Q?\x97\x18Z?\xfa\xbds?\xbb\x18\x13?\xdd\x1b\r?\xdc\xce\xb5?\r\x8as?1e@?0\xdf7?\xd7\xb7\x16@\xe7[\xcf?\xb19\xcd?\xff\x02\x8b?t\xf2H?\xd0_3?[\xfc&?>\xdff?\xde<M?^`\x91?\xf4!I?\xa8\xfb\x19?@\x11\xab?\xde\xcf\x88?\x1f\xd9&?\xd8\xdf7?P,\xad?\xf5\xb1D?5(<?\x00>\x1e?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp45
(dp46
S'isNumeric'
p47
(dp48
g28
I01
sg36
I00
sg43
I01
sg41
I01
ssS'trials'
p49
g1
sS'dataTypes'
p50
(lp51
g28
ag36
ag41
ag43
asS'dataShape'
p52
(lp53
I16
aI4
asbsS'thisN'
p54
I64
sS'sequenceIndices'
p55
g37
(g31
(I0
tS'b'
tRp56
(I1
(I16
I4
tg34
(S'i4'
I0
I1
tRp57
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x00\x00\x00\x00\x0e\x00\x00\x00\t\x00\x00\x00\r\x00\x00\x00\x0c\x00\x00\x00\x04\x00\x00\x00\x0f\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x03\x00\x00\x00\x07\x00\x00\x00\n\x00\x00\x00\x06\x00\x00\x00\x01\x00\x00\x00\x08\x00\x00\x00\x0b\x00\x00\x00\r\x00\x00\x00\x03\x00\x00\x00\n\x00\x00\x00\x0b\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x08\x00\x00\x00\x0e\x00\x00\x00\t\x00\x00\x00\x0c\x00\x00\x00\x05\x00\x00\x00\x0f\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x0e\x00\x00\x00\x08\x00\x00\x00\t\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\n\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00\r\x00\x00\x00\x0f\x00\x00\x00\x06\x00\x00\x00\x07\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x0b\x00\x00\x00\x0e\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\t\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x05\x00\x00\x00\x07\x00\x00\x00\x0c\x00\x00\x00\r\x00\x00\x00\n\x00\x00\x00'
tbsS'finished'
p58
I01
sS'nReps'
p59
I4
sS'nRemaining'
p60
I-1
sS'trialList'
p61
(lp62
g24
(cpsychopy.data
TrialType
p63
g26
(dp64
VxPos
p65
I200
sVlocation
p66
Vup_right
p67
sVstimFile
p68
VbigHsmallH.png
p69
sVcongruence
p70
Vconsistent
p71
sVyPos
p72
I200
sVcorrAns
p73
Vh
stRp74
ag24
(g63
g26
(dp75
g65
I200
sg66
g67
sg68
VbigHsmallS.png
p76
sg70
Vconflicting
p77
sg72
I200
sg73
Vs
stRp78
ag24
(g63
g26
(dp79
g65
I200
sg66
g67
sg68
VbigSsmallS.png
p80
sg70
g71
sg72
I200
sg73
Vs
stRp81
ag24
(g63
g26
(dp82
g65
I200
sg66
g67
sg68
VbigSsmallH.png
p83
sg70
g77
sg72
I200
sg73
Vh
stRp84
ag24
(g63
g26
(dp85
g65
I-200
sg66
Vup_left
p86
sg68
g69
sg70
g71
sg72
I200
sg73
Vh
stRp87
ag24
(g63
g26
(dp88
g65
I-200
sg66
g86
sg68
g76
sg70
g77
sg72
I200
sg73
Vs
stRp89
ag24
(g63
g26
(dp90
g65
I-200
sg66
g86
sg68
g80
sg70
g71
sg72
I200
sg73
Vs
stRp91
ag24
(g63
g26
(dp92
g65
I-200
sg66
g86
sg68
g83
sg70
g77
sg72
I200
sg73
Vh
stRp93
ag24
(g63
g26
(dp94
g65
I200
sg66
Vdown_right
p95
sg68
g69
sg70
g71
sg72
I-200
sg73
Vh
stRp96
ag24
(g63
g26
(dp97
g65
I200
sg66
g95
sg68
g76
sg70
g77
sg72
I-200
sg73
Vs
stRp98
ag24
(g63
g26
(dp99
g65
I200
sg66
g95
sg68
g80
sg70
g71
sg72
I-200
sg73
Vs
stRp100
ag24
(g63
g26
(dp101
g65
I200
sg66
g95
sg68
g83
sg70
g77
sg72
I-200
sg73
Vh
stRp102
ag24
(g63
g26
(dp103
g65
I-200
sg66
Vdown_left
p104
sg68
g69
sg70
g71
sg72
I-200
sg73
Vh
stRp105
ag24
(g63
g26
(dp106
g65
I-200
sg66
g104
sg68
g76
sg70
g77
sg72
I-200
sg73
Vs
stRp107
ag24
(g63
g26
(dp108
g65
I-200
sg66
g104
sg68
g80
sg70
g71
sg72
I-200
sg73
Vs
stRp109
ag24
(g63
g26
(dp110
g65
I-200
sg66
g104
sg68
g83
sg70
g77
sg72
I-200
sg73
Vh
stRp111
asS'seed'
p112
NsS'thisIndex'
p113
cnumpy.core.multiarray
scalar
p114
(g57
S'\n\x00\x00\x00'
tRp115
sS'thisTrialN'
p116
I0
sS'method'
p117
S'random'
p118
sS'_warnUseOfNext'
p119
I01
sb.